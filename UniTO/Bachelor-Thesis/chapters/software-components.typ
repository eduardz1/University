#import "../utils/common.typ": *

= Software Components

The following is an overview of the software components it was necessary to write to achieve our goals.

#_content(
  [
    == SMOL Scheduler

    The SMOL scheduler is the main program that controls the execution of the SMOL code and, in doing so, schedules the actuators. It's also responsible in starting the data collectors. All of that is done remotely via SSH on a local network.

    More precisely, the scheduler is a Java program that runs a SMOL program, extracts the data from a knoledge graph generated by SMOL and interacts with other layers to create the digital twin.

    // TODO: continue when you have internet and can check the codebase, add code snippets

    == Data Collector Program

    To collect data from the sensors connected to the greenhouse we wrote a python program that retrieves the data and uploads them to InfluxDB.

    The repo can be found at https://github.com/N-essuno/greenhouse-data-collector. What follows is an overview of the program

    == Greenhouse Asset Model <asset-model>

    #lorem(30) // TODO:

    == SMOL Twinning program <smol-twinning-program>

    The `SMOL` program is run periodically by the server and is responsible for creating the digital twin and running the FMI simulators. It achieves this in the following steps:
    + It reads the #link(<asset-model>)[`asset model`] from the `OWL` file
    + It generates `SMOL` objects from the asset model individuals
    + For each asset object it retrieves the sensor data associated with that specific asset from the database
    + After retrieving the data it performs the semantic lifting of the program state, creating a knowledge grappph that represents the state of the assets in the greenhouse

    == The Digital Twin

    // TODO: add stuff about modelica and semantic objects and stuff
  ]
)